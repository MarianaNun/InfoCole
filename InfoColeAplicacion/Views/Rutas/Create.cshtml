@model InfoColeAplicacion.Models.Ruta

<style>
    #map {
        height: 400px; 
        width: 100%; 
    }
</style>

<h2>Crear</h2>

<div class="row">
    
    <div id="map" class="col-md-8 col-sm-12"></div>
    
    <div class="form-horizontal col-md-4">
        <h4>Ruta</h4>
        <hr />

        <div class="form-group">
            <label class="control-label col-md-2" for="ID">Linea</label>
            <div class="col-md-10">
                @Html.DropDownList("ID", null, htmlAttributes: new { @class = "form-control elements" })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="guardar" value="Guardar" class="btn btn-success elements" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="remover" disabled class="btn btn-danger elements">Remover ultimo</button>
            </div>
        </div>
        <div>
            @Html.ActionLink("Volver", "Index", null, htmlAttributes: new { @class = "btn btn-primary elements" })
        </div>
    </div>
       
</div>







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>

        var map;
        var markers = [];
        startPosition = {};
        startPosition.Lat = 0.0;
        startPosition.Long = 0.0;

        //Solicita permiso para acceder a la posicion del dispositivo
        //De ser denega la solicitud, el centro del mapa se situa en el centro de la plaza 25 de mayo
        function initScript() {
            navigator.geolocation.getCurrentPosition((position) => {

                this.startPosition.Lat = position.coords.latitude;
                this.startPosition.Long = position.coords.longitude;

                var position = { lat: this.startPosition.Lat, lng: this.startPosition.Long };
                initMap(position);
            }, () => {
                this.startPosition.Lat = -27.451102018823633;
                this.startPosition.Long = -58.98655582728293;
                var position = { lat: this.startPosition.Lat, lng: this.startPosition.Long };
                initMap(position);
                });
        }


        //Inicia el mapa
        function initMap(position) {
            
            map = new google.maps.Map(
                document.getElementById('map'), { zoom: 16, center: position });

            poly = new google.maps.Polyline({
                strokeColor: '#000000',
                strokeOpacity: 0.4,
                strokeWeight: 3
            });
            poly.setMap(map);
            // Add a listener for the click event
            map.addListener('click', addLatLng);
        }

        //Agrega un punto a la ruta
        function addLatLng(event) {
            if (poly.getPath().length == 0) {
                $('#remover').removeAttr('disabled');
            }
            let path = poly.getPath();

            path.push(event.latLng);
            
            var marker = new google.maps.Marker({
                position: event.latLng,
                map: map
            });
            markers.push(marker);
        }

        //Llamada ajax al metodo de crear
        $("#guardar").click(function (e){
            e.preventDefault();
            let puntos = [];
            for (let i = 0; i < markers.length; i++) {
                var punto = {
                    Lat : "",
                    Long : ""
                };
                punto.Lat = markers[i].position.lat();
                punto.Long = markers[i].position.lng();
                puntos.push(punto);
            }
            let data = {};
            data.ID = $('#ID').val() * 1;
            data.Puntos = puntos;
            let url = "@Url.Action("Create", "Rutas")";
            $.post(url, data).done(
                (mensaje) => {

                    //Quita todos los puntos del mapa
                    for (let i = markers.length - 1; i >= 0; i--) {
                        markers[i].setMap(null);
                        markers[i] = null;        
                    }
                    markers = [];

                    //Quita todas las lineas del mapa
                    for (let i = poly.getPath().length - 1; i >= 0; i--) {
                        poly.getPath()[i] = null;
                        poly.getPath().pop();
                    }
                    alert(mensaje);
                    $('#remover').attr('disabled','disabled');
                }
            ).fail(
                () => { alert("Se ha producido un error,intente nuevamente"); }               
            );
        })

        //Remueve el ultimo punto agregado
        $('#remover').click(() => {
            
            let path = poly.getPath();
            if (path.length > 0) {
                path.pop();
                markers.pop().setMap(null);
                if (path.length == 0) {
                    $('#remover').attr('disabled','disabled');
                }
                console.log(path.length);
            }
            
        }
        )

    </script>


    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDT4I8iAS4V_drotpXRjk1RjRZsAuKhxqU&callback=initScript">
    </script>
}
